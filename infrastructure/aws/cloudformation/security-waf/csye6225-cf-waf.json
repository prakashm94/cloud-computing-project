{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Create WAF and Rule",
  "Resources": {
    "SqlInjDetection": {
      "Type": "AWS::WAFRegional::SqlInjectionMatchSet",
      "Properties": {
        "Name": "SQL Injection Detection",
        "SqlInjectionMatchTuples": [
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "BODY"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "BODY"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "Cookie"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "Cookie"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "Authorization"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "Authorization"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          }
        ]
      }
    },
    "SqlInjRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "SQL Injection Rule",
        "MetricName": "SqlInjRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "SqlInjDetection"
            },
            "Negated": false,
            "Type": "SqlInjectionMatch"
          }
        ]
      }
    },
    "MyIPSetWhiteList": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "WhiteList IP Address Set",
        "IPSetDescriptors": [
          {
            "Type": "IPV4",
            "Value": "155.33.135.11/32"
          },
          {
            "Type": "IPV4",
            "Value": "192.0.7.0/24"
          }
        ]
      }
    },
    "MyIPSetWhiteListRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "WhiteList IP Address Rule",
        "MetricName": "MyIPSetWhiteListRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "MyIPSetWhiteList"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "MyIPSetBlacklist1": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "BlackList IP Address Set",
        "IPSetDescriptors": [
          {
            "Type": "IPV4",
            "Value": "155.33.133.6/32"
          },
          {
            "Type": "IPV4",
            "Value": "192.0.7.0/24"
          }
        ]
      }
    },
    "MyIPSetBlackListRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "BlackList IP Address Rule",
        "MetricName": "MyIPSetBlackListRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "MyIPSetBlacklist1"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "MyScanProbesSet": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "MyScanProbesSet"
      }
    },
    "MyScansProbesRule": {
      "Type": "AWS::WAFRegional::Rule",
      "DependsOn": "MyScanProbesSet",
      "Properties": {
        "Name": "MyScansProbesRule",
        "MetricName": "SecurityAutomationsScansProbesRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "MyScanProbesSet"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "DetectXSS": {
      "Type": "AWS::WAFRegional::XssMatchSet",
      "Properties": {
        "Name": "XssMatchSet",
        "XssMatchTuples": [
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TextTransformation": "URL_DECODE"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TextTransformation": "HTML_ENTITY_DECODE"
          }
        ]
      }
    },
    "XSSRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "XSSRule",
        "MetricName": "XSSRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "DetectXSS"
            },
            "Negated": false,
            "Type": "XssMatch"
          }
        ]
      }
    },
    "MySizeConstraint": {
      "Type": "AWS::WAFRegional::SizeConstraintSet",
      "Properties": {
        "Name": "SizeConstraints",
        "SizeConstraints": [
          {
            "ComparisonOperator": "GT",
            "FieldToMatch": {
              "Type": "URI"
            },
            "Size": "512",
            "TextTransformation": "NONE"
          },
          {
            "ComparisonOperator": "GE",
            "FieldToMatch": {
              "Type": "BODY"
            },
            "Size": "204800",
            "TextTransformation": "NONE"
          },
          {
            "ComparisonOperator": "GE",
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "Size": "1024",
            "TextTransformation": "NONE"
          }
        ]
      }
    },
    "SizeConstraintRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "SizeConstraintRule",
        "MetricName": "SizeConstraintRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "MySizeConstraint"
            },
            "Negated": false,
            "Type": "SizeConstraint"
          }
        ]
      }
    },
    "PathStringSetReferers": {
      "Type": "AWS::WAFRegional::ByteMatchSet",
      "Properties": {
        "Name": "Path String Referers Set",
        "ByteMatchTuples": [
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": "../",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": "../",
            "TextTransformation": "HTML_ENTITY_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TargetString": "../",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TargetString": "../",
            "TextTransformation": "HTML_ENTITY_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": "://",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": "://",
            "TextTransformation": "HTML_ENTITY_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TargetString": "://",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "QUERY_STRING"
            },
            "TargetString": "://",
            "TextTransformation": "HTML_ENTITY_DECODE",
            "PositionalConstraint": "CONTAINS"
          }
        ]
      }
    },
    "PathStringSetReferersRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "PathStringSetReferersRule",
        "MetricName": "PathStringSetReferersRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "PathStringSetReferers"
            },
            "Negated": false,
            "Type": "ByteMatch"
          }
        ]
      }
    },
    "BadReferers": {
      "Type": "AWS::WAFRegional::ByteMatchSet",
      "Properties": {
        "Name": "Bad Referers",
        "ByteMatchTuples": [
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "cookie"
            },
            "TargetString": "badrefer1",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          },
          {
            "FieldToMatch": {
              "Type": "HEADER",
              "Data": "authorization"
            },
            "TargetString": "QGdtYWlsLmNvbQ==",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "CONTAINS"
          }
        ]
      }
    },
    "BadReferersRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "BadReferersRule",
        "MetricName": "BadReferersRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "BadReferers"
            },
            "Negated": false,
            "Type": "ByteMatch"
          }
        ]
      }
    },
    "ServerSideIncludesSet": {
      "Type": "AWS::WAFRegional::ByteMatchSet",
      "Properties": {
        "Name": "Server Side Includes Set",
        "ByteMatchTuples": [
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": "/includes",
            "TextTransformation": "URL_DECODE",
            "PositionalConstraint": "STARTS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".cfg",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".conf",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".config",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".ini",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".log",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".bak",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".bakup",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          },
          {
            "FieldToMatch": {
              "Type": "URI"
            },
            "TargetString": ".txt",
            "TextTransformation": "LOWERCASE",
            "PositionalConstraint": "ENDS_WITH"
          }
        ]
      }
    },
    "ServerSideIncludesRule": {
      "Type": "AWS::WAFRegional::Rule",
      "Properties": {
        "Name": "ServerSideIncludesRule",
        "MetricName": "ServerSideIncludesRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "ServerSideIncludesSet"
            },
            "Negated": false,
            "Type": "ByteMatch"
          }
        ]
      }
    },
    "WAFAutoBlockSet": {
      "Type": "AWS::WAFRegional::IPSet",
      "Properties": {
        "Name": "Auto Block Set"
      }
    },
    "MyAutoBlockRule": {
      "Type": "AWS::WAFRegional::Rule",
      "DependsOn": "WAFAutoBlockSet",
      "Properties": {
        "Name": "Auto Block Rule",
        "MetricName": "AutoBlockRule",
        "Predicates": [
          {
            "DataId": {
              "Ref": "WAFAutoBlockSet"
            },
            "Negated": false,
            "Type": "IPMatch"
          }
        ]
      }
    },
    "MyWebACL": {
      "Type": "AWS::WAFRegional::WebACL",
      "Properties": {
        "Name": "MyACL",
        "DefaultAction": {
          "Type": "ALLOW"
        },
        "MetricName": "MyWebACL",
        "Rules": [
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 1,
            "RuleId": {
              "Ref": "SizeConstraintRule"
            }
          },
          {
            "Action": {
              "Type": "ALLOW"
            },
            "Priority": 2,
            "RuleId": {
              "Ref": "MyIPSetWhiteListRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 3,
            "RuleId": {
              "Ref": "MyIPSetBlackListRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 4,
            "RuleId": {
              "Ref": "MyAutoBlockRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 5,
            "RuleId": {
              "Ref": "SqlInjRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 6,
            "RuleId": {
              "Ref": "BadReferersRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 7,
            "RuleId": {
              "Ref": "PathStringSetReferersRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 8,
            "RuleId": {
              "Ref": "ServerSideIncludesRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 9,
            "RuleId": {
              "Ref": "XSSRule"
            }
          },
          {
            "Action": {
              "Type": "BLOCK"
            },
            "Priority": 10,
            "RuleId": {
              "Ref": "MyScansProbesRule"
            }
          }
        ]
      }
    },
    "MyWebACLAssociation": {
      "Type": "AWS::WAFRegional::WebACLAssociation",
      "DependsOn": "MyWebACL",
      "Properties": {
        "ResourceArn": {
          "Fn::ImportValue": "ApplicationLoadBalancerArn"
        },
        "WebACLId": {
          "Ref": "MyWebACL"
        }
      }
    }
  }
}
